QUICKSTART GUIDE
Release 24


========================================================================
General Information / Warnings
========================================================================

Windows users:  In Linux, the operating system of the router,
all commands and other inputs are case sensitive.  If you are unfamiliar with
Linux, please make sure to enter the commands, filenames, volume labels, etc.
exactly as shown.

Passwords:  Passwords and keys entered through the GUI are saved in
nvram in clear text, and are copied in clear text to the restore script.
Please take whatever measures you deem appropriate to protect this data.

Share Permissions:  Share permissions for SMB and FTP access are not saved
in nvram, but are read/writtend directly from the shared resource.  While
the access lists are saved/restored, it may be necessary to reset the access
permissions after a restore.

Space Management:  This utility will save multiple versioned backups of
the user nvram and jffs directory (if jffs is active) by router.  It is the
users responsibility to perform space management on the USB stick as required.

JFFS Restore:  Some of the later code levels also clear jffs during a restore to factory
defaults. (Things such as OpenVPN certificates and TrendMicro data are now stored in the
jffs space.  In order to fully restore your system, you therefore need to run 
jffs-restore.sh following nvram-restore.sh

MAC list filters:  There have been multiple changes in the handling of MAC list filters 
between various firmware releases.  Most cases will be handled correctly by the exception
processing during a restore.  However, if the MAC filters are incorrect after the restore, 
they may be cleared by running clear-maclist.sh

Additional Options:  For advanced users, the nvram-save.sh script now has
several new options.  These can be displayed through a help option, nvram-save.sh -h

	NVRAM User Save/Restore Utility
        nvram-save.sh Version 24
        Options: -h           this help msg
                 -v           Print version/perform consistency check
                 -b           Backup mode - save for restore to same router (default)
                 -m           Migration mode - transfer settings to another router
                 -i inifile   Specify custom nvram variable ini file
                 -clk         Include clkfreq/overclock setting (Backup mode only)
                 -nojffs      Skip backup of jffs storage
                 -nouser      Skip execution of user exit script


Package Contents:
nvram-save.sh		Main user script
nvram-excp-merlin.sh	Script called automatically during restore for
			  code level specific processing
nvram-restore.sh	User script to restore saved user NVRAM variables
jffs-restore.sh		User script to restore jffs directory
nvram-merlin.ini	NVRAM variable control file
nvram-sample.ini	Example user NVRAM control file with only basic variables
clear-maclist.sh	Script to clear MAC list filters in case of problems detecting
			  the correct format (multiple changes between firmware levels)
QuickStart.txt		Documentation in DOS/WIN format
Changelog.txt		Version history in DOS/WIN format

========================================================================
Step (1) - Prepare the USB Stick
========================================================================

- Plug the USB stick into your main computer.  Format the USB stick and give it a volume label of ASUS
	NOTE: Most USB sticks come pre-formatted as FAT32 or exFAT.  These format types do not support access
	access permissions under Linux (access is global), NTFS is preferred.  If using an Apple OS, select
	MS-DOS format which is really FAT32.

	Prior to Release 22 for these disk formats, you may experience some errors as the scripts attempt to ensure that
	the correct permissions are setup for the files. These errors show as CHMOD failures and can be safely ignored.  
	As of Release 22, these errors will be supressed.
	
- Unzip the files from the attachment and copy them to the root directory of the USB stick.
        NOTE:  Do not edit/save the *.sh or *.ini files on a Windows computer or they will no longer work
        (Linux format vs DOS format)

- Remove the USB stick from your computer and plug it into the router

========================================================================
Step (2) - Telnet into the router
========================================================================
- If telnet is not enabled on the router go to the Administration/System page
(default is http://192.168.1.1/Advanced_System_Content.asp)
and click the radio button to enable telnet, and then click Apply to save the change.

- Open a telnet session on your computer

If you are on windows, this will tell you how to install telnet....
http://social.technet.microsoft.com/wiki/contents/articles/910.windows-7-enabling-telnet-client.aspx

If Linux, telnet is included in all distributions.  Open a terminal window and type telnet

- Once you get the telnet prompt enter

o 192.168.1.1 (that's the letter 'o' for open)
You will then be prompted for your logon info (same info as you use to logon to the router gui)

========================================================================
Step (3) - Run the script to save the user nvram and jffs directory
========================================================================

- At the telnet prompt enter

ls /mnt                 (you should see the name of the volume label of the USB stick - ASUS)
cd /mnt/ASUS            (change to the USB stick directory)
chmod 755 ./*.sh        (this makes the package script files executable)
                         If using a FAT32 or exFAT formatted USB stick, you may skip this step.
                         Executing this command on a USB stick with these formats will generate 
			 a permissions error which can safely be ignored.

By default, all of the nvram utility data files are placed in the current working directory, /mnt/ASUS.  As of Release 16,
if you wish to place these data files in a 'backup' subdirectory, you can create that subdirectory now.  NOTE:  Case is important, 
the directory must be lowercase 'backup')

mkdir /mnt/ASUS/backup 

To start the backup process

./nvram-save.sh         (This executes the script in Backup Mode, you should see Saving messages.)
./nvram-save.sh -M      (This executes the script in Migration Mode, for moving the settings from one router to another.
                         In this mode some settings are not copied, for example the wireless transmit power.)

- You now have a script on the USB that will restore the user settings named
nvram-restore-yyyymmddhhmm-macid.sh 
        where yyyymmddhhmm is the timestamp of the saved setting (hhmm timestamp added as of Release 24)
        macid In Backup Mode, this is the last two bytes of the router MAC address (for example E1F2)
              In Migration Mode, this will be MIGR

- If you want to look at the contents of the restore script....
cat nvram-restore-yyyymmddhhmm-macid.sh | more

As of Release 15, two text files are also created in the data directory.
nvram-all-yyyymmddhhmm-macid.txt which is a sorted nvram show output of all the nvram variables and their values.
	Note that this 	file also contains system level variables which should not be modified by the end user.
nvram-usr-yyyymmddhhmm-macid.txt which is a text listing of the variables and their values saved by the utility organized by
	the save categories.
As of Release 16, a log file, nvram-util.log is also created in the current directory which logs the run activity of
	nvram-save.sh (including the jffs backup), nvram-restore.sh and jffs-restore.sh which will be executed later.
	NOTE:  Existing run data IS NOT migrated to the nvram-util.log file.  Only script executions on Release 16 or
	later will be logged.

NOTE: With the introduction of a 'Clean restore' (described in the restore section) it will be easier to view the nvram-usr 
text file to determine the contents of any saved nvram variable.
	
At this point, you have a saved copy of the nvram variables which have been set through the Web GUI.
As of Release 14, entries are also made in the router syslog documenting the running of nvram-save.

If you have enabled JFFS storage on the router, a copy of the /jffs directory will also be saved to the USB stick.
- Name of the saved directory is /jffs-yyyymmddhhmm-macid, where macid is the same previously defined

You can now do a Reset to factory defaults on the router, remove the USB stick as a
backup or take the USB stick to another router to transfer the settings if run in Migration mode.

If you are preparing for a code update, the following steps are recommended:
- Reset to factory defaults (optional, but the safest to reset before code load as well)
- Load new code via router gui
- Reset to factory defaults (this is the important reset and must be performed prior to the restore)

========================================================================
Step (4) - Run the script to restore the user nvram and/or the jffs directory
========================================================================
- To execute the restore

Plug the USB stick into the router.

Go to the Administration/System page
(default is http://192.168.1.1/Advanced_System_Content.asp)

If you performed a factory reset:
	- Telnet may now be disabled and must be re-enabled.
	- If you had previously changed the Router Login Name from the default 'admin', you should change
	  it back to be the same as when you performed the nvram-save step to use the customized login.
	  Otherwise, the login/password will be admin/admin.

Open a telnet prompt as described in Step (2) above.

ls /mnt                 (you should see the name of the volume label of the USB stick - ASUS)
cd /mnt/ASUS            (change to the USB stick directory)

As of Release 16, executing

./nvram-restore.sh

without any parameters will scan the nvram-util.log file and find the latest saved values and ask you to confirm the
restore.   As of Release 18, it will also ask if you want to 'Clean unused nvram variables'.  Answering Y (yes) here
will only restore those variables which already exist in the current nvram.   This can be useful, for example, after 
doing a factory reset on a lower level of code, and you want to eliminate nvram variables which were only used on a
later level.

You can also provide the yyyymmddhhmm-macid code on the command line to load a specific set of saved values

You may also continue to use the utility as before, and execute the a specific restore script  (and specify -clean
as a single parameter to perform a clean restore as described above, the default is to restore all values).

./nvram-restore-yyyymmddhhmm-macid.sh  (execute the restore to the same router) or
./nvram-restore-yyyymmddhhmm-MIGR.sh   (execute the restore to a new router)

The restore will also look at the code level where the save was performed and the currently active
code level and will make adjustments as necessary for documented code specific variables (automatically calls
nvram-excp-merlin.sh).

WARNING:  If doing a migration restore, make sure both your old router and new router are not
on the network at the same time.   Having both active could result in duplicate resources, such
as SSIDs and DHCP servers.  Doing a migration restore will also automatically be performed with the 
-clean option.

If you wish to restore your /jffs directory this must be done manually via a second script jffs-restore.sh
- make sure JFFS is enabled on the router

To restore the entire directory
Open a telnet prompt as described in Step (2) above.

ls /mnt                 (you should see the name of the volume label of the USB stick - ASUS)
cd /mnt/ASUS            (change to the USB stick directory)

As of Release 16, executing

./jffs-restore.sh

without any parameters will scan the nvram-util.log file and find the latest jffs backup directory and ask you to
confirm the restore.   You can also provide the yyyymmddhhmm-macid code on the command line to restore a specific
backup directory.

./jffs-restore.sh yyyymmddhhmm-macid
			(copy the entire backup /jffs-yyyymmddhhmm-macid directory from the USB stick to the router flash,
			 replacing the current /jffs contents)

OR

You can access the /tmp/ASUS/jffs-yyyymmddhhmm-macid and copy individual files as needed back to the router /jffs directory
or subdirectories.

As of Release 14, entries are also made in the router syslog documenting the running of the nvram-restore or jffs-restore.
As of Release 16, entries are also made in the nvram-util.log file documenting the running of the nvram-restore
	or jffs-restore. NOTE:  Existing run data IS NOT migrated to the nvram-util.log file.  Only script executions
	on Release 16 or later will be logged.
	

========================================================================
Saving the data for later use
========================================================================
Of course, you can keep the data on the USB Stick for future use/backup.

If you wish, you can also copy the data off the USB Stick back to your PC for safe keeping.
If you do this, and later copy the data back to a USB Stick for use, it is likely you will
need to restore the correct permissions for the scripts.

Plug the USB stick with the copied files into the router
Open a telnet prompt as described in Step (2) above
ls /mnt                 (you should see the name of the volume label of your USB stick - ASUS for example)
cd /mnt/ASUS            (change to the USB stick directory, where ASUS is the volume label of the USB stick)
chmod a+rx ./*.sh       (this ensures the package script files are executable)
			 If using a FAT32 or exFAT formatted USB stick, you may skip this step.
                         Executing this command on a USB stick with these formats will generate 
			 a permissions error which can safely be ignored.

========================================================================
Advanced Users
========================================================================
The script 'nvram-save.sh' will call a user exit script

./nvram-user.sh

at the end of it execution.

A user may create this script to do extra processing on the backup files such as
- create tar backups of the files
- move or copy the backup files to another location

Two parameters are passed to the script 
- the backup id of '-yyyymmddhhmm-macid'.
- the name of the working backup directory

For example, the following script will create a zipped tar archive of the last run in the backup directory and is 
included in the package nvram-user-sample.sh

----------------------------
#!/bin/sh

# User exit nvram-user.sh
# Parameters passed
# $1 current save id string "-yyyymmddhhmm-macid"
# $2 the working backup directory

echo "Creating nvram-backup"$1".tar.gz"
tar -zcf "$2/nvram-backup"$1".tar.gz" "$2/nvram-restore"$1".sh" "$2/jffs"$1
exit 0
----------------------------
